// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT MODIFY IT.

import { Asset, Entry } from "contentful";
import { Document } from "@contentful/rich-text-types";

export interface ICaseStudyFields {
  /** Internal name */
  internalName: string;

  /** SEO fields */
  seoFields?: IComponentSeo | undefined;

  /** Slug */
  slug: string;

  /** Author */
  author?: IComponentAuthor | undefined;

  /** Published date */
  publishedDate: string;

  /** Title */
  title: string;

  /** Subtitle */
  shortDescription?: string | undefined;

  /** Featured image */
  featuredImage: Asset;

  /** Content */
  content: Document;

  /** Related blog posts */
  relatedBlogPosts?: IPageBlogPost[] | undefined;
}

/** To create individual case studies */

export interface ICaseStudySkeleton {
  contentTypeId: 'caseStudy'
  fields: ICaseStudyFields
}

export interface ICaseStudy extends Entry<ICaseStudySkeleton> {  
}

export interface IComponentAuthorFields {
  /** Internal name */
  internalName: string;

  /** Name */
  name: string;

  /** Avatar */
  avatar?: Asset | undefined;
}

/** To have author-related properties */
export interface IComponentAuthorSkeleton {
  contentTypeId: 'componentAuthor'
  fields: IComponentAuthorFields
}

export interface IComponentAuthor extends Entry<IComponentAuthorSkeleton> {  
}

export interface IComponentRichImageFields {
  /** Internal name */
  internalName: string;

  /** Image */
  image: Asset;

  /** Caption */
  caption?: string | undefined;

  /** Full width */
  fullWidth?: boolean | undefined;
}

/** To describe an image used in rich text fields */

export interface IComponentRichImageSkeleton {
  contentTypeId: 'componentRichImage'
  fields: IComponentRichImageFields
}

export interface IComponentRichImage extends Entry<IComponentRichImageSkeleton> {   
}

export interface IComponentSeoFields {
  /** Internal name */
  internalName: string;

  /** Page title */
  pageTitle: string;

  /** Page description */
  pageDescription?: string | undefined;

  /** Canonical URL */
  canonicalUrl?: string | undefined;

  /** nofollow */
  nofollow: boolean;

  /** noindex */
  noindex: boolean;

  /** Share images */
  shareImages?: Asset[] | undefined;
}

/** To have SEO-related properties to the pages we render */

export interface IComponentSeoSkeleton {
  contentTypeId: 'componentSeo'
  fields: IComponentSeoFields
}

export interface IComponentSeo extends Entry<IComponentSeoSkeleton> {
}

export interface IPageBlogPostFields {
  /** Internal name */
  internalName: string;

  /** SEO fields */
  seoFields?: IComponentSeo | undefined;

  /** Slug */
  slug: string;

  /** Author */
  author?: IComponentAuthor | undefined;

  /** Published date */
  publishedDate: string;

  /** Title */
  title: string;

  /** Subtitle */
  shortDescription?: string | undefined;

  /** Featured image */
  featuredImage: Asset;

  /** Content */
  content: Document;

  /** Related blog posts */
  relatedBlogPosts?: IPageBlogPost[] | undefined;
}

/** To create individual blog posts */

export interface IPageBlogPostSkeleton {
  contentTypeId: 'pageBlogPost'
  fields: IPageBlogPostFields
}

export interface IPageBlogPost extends Entry<IPageBlogPostSkeleton> {
}

export interface IPageLandingFields {
  /** Internal name */
  internalName: string;

  /** SEO fields */
  seoFields?: IComponentSeo | undefined;

  /** Featured blog post */
  featuredBlogPost?: IPageBlogPost | undefined;
}

/** To have an entry point for the app (e.g. Homepage) */

export interface IPageLandingSkeleton {
  contentTypeId: 'pageLanding'
  fields: IPageLandingFields
}

export interface IPageLanding extends Entry<IPageLandingSkeleton> {
}

export interface IPublisherFields {
  /** Name */
  name: string;

  /** URL */
  url: string;

  /** Image */
  image?: Asset | undefined;
}

/** Publisher of learning resources */

export interface IPublisherSkeleton {
  contentTypeId: 'publisher'
  fields: IPublisherFields
}

export interface IPublisher extends Entry<IPublisherSkeleton> {
}

export interface IResourceCollectionFields {
  /** Title */
  title: string;

  /** Description */
  description: string;

  /** Children */
  children?: IResourceCollection[] | undefined;

  /** Children */
  parent?: IResourceCollection | undefined;

  /** Images */
  images?: Asset[] | undefined;
}

/** Collection of learning resources */

export interface IResourceCollectionSkeleton {
  contentTypeId: 'resourceCollection'
  fields: IResourceCollectionFields
}

export interface IResourceCollection extends Entry<IResourceCollectionSkeleton> {
}

export type CONTENT_TYPE =
  | "caseStudy"
  | "componentAuthor"
  | "componentRichImage"
  | "componentSeo"
  | "pageBlogPost"
  | "pageLanding"
  | "publisher"
  | "resourceCollection";

export type IEntry =
  | ICaseStudy
  | IComponentAuthor
  | IComponentRichImage
  | IComponentSeo
  | IPageBlogPost
  | IPageLanding
  | IPublisher
  | IResourceCollection;

export type LOCALE_CODE = "en-US";

export type CONTENTFUL_DEFAULT_LOCALE_CODE = "en-US";
